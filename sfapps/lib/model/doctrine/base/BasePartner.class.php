<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Partner', 'doctrine');

/**
 * BasePartner
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $name_en
 * @property string $name_ru
 * @property string $image
 * @property string $address
 * @property string $address_en
 * @property string $address_ru
 * @property string $phone
 * @property string $web
 * @property string $lat
 * @property string $lng
 * @property timestamp $created_at
 * 
 * @method integer   getId()         Returns the current record's "id" value
 * @method string    getName()       Returns the current record's "name" value
 * @method string    getNameEn()     Returns the current record's "name_en" value
 * @method string    getNameRu()     Returns the current record's "name_ru" value
 * @method string    getImage()      Returns the current record's "image" value
 * @method string    getAddress()    Returns the current record's "address" value
 * @method string    getAddressEn()  Returns the current record's "address_en" value
 * @method string    getAddressRu()  Returns the current record's "address_ru" value
 * @method string    getPhone()      Returns the current record's "phone" value
 * @method string    getWeb()        Returns the current record's "web" value
 * @method string    getLat()        Returns the current record's "lat" value
 * @method string    getLng()        Returns the current record's "lng" value
 * @method timestamp getCreatedAt()  Returns the current record's "created_at" value
 * @method Partner   setId()         Sets the current record's "id" value
 * @method Partner   setName()       Sets the current record's "name" value
 * @method Partner   setNameEn()     Sets the current record's "name_en" value
 * @method Partner   setNameRu()     Sets the current record's "name_ru" value
 * @method Partner   setImage()      Sets the current record's "image" value
 * @method Partner   setAddress()    Sets the current record's "address" value
 * @method Partner   setAddressEn()  Sets the current record's "address_en" value
 * @method Partner   setAddressRu()  Sets the current record's "address_ru" value
 * @method Partner   setPhone()      Sets the current record's "phone" value
 * @method Partner   setWeb()        Sets the current record's "web" value
 * @method Partner   setLat()        Sets the current record's "lat" value
 * @method Partner   setLng()        Sets the current record's "lng" value
 * @method Partner   setCreatedAt()  Sets the current record's "created_at" value
 * 
 * @package    vogue
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePartner extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('partner');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('name_en', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('name_ru', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('address_en', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('address_ru', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('phone', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('web', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('lat', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('lng', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}