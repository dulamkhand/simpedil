<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProductSpec', 'doctrine');

/**
 * BaseProductSpec
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $product_id
 * @property integer $model_id
 * @property integer $spec_id
 * @property integer $sort
 * @property string $body
 * @property string $body_en
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Product $Product
 * @property Spec $Spec
 * 
 * @method integer     getId()         Returns the current record's "id" value
 * @method integer     getProductId()  Returns the current record's "product_id" value
 * @method integer     getModelId()    Returns the current record's "model_id" value
 * @method integer     getSpecId()     Returns the current record's "spec_id" value
 * @method integer     getSort()       Returns the current record's "sort" value
 * @method string      getBody()       Returns the current record's "body" value
 * @method string      getBodyEn()     Returns the current record's "body_en" value
 * @method timestamp   getCreatedAt()  Returns the current record's "created_at" value
 * @method timestamp   getUpdatedAt()  Returns the current record's "updated_at" value
 * @method Product     getProduct()    Returns the current record's "Product" value
 * @method Spec        getSpec()       Returns the current record's "Spec" value
 * @method ProductSpec setId()         Sets the current record's "id" value
 * @method ProductSpec setProductId()  Sets the current record's "product_id" value
 * @method ProductSpec setModelId()    Sets the current record's "model_id" value
 * @method ProductSpec setSpecId()     Sets the current record's "spec_id" value
 * @method ProductSpec setSort()       Sets the current record's "sort" value
 * @method ProductSpec setBody()       Sets the current record's "body" value
 * @method ProductSpec setBodyEn()     Sets the current record's "body_en" value
 * @method ProductSpec setCreatedAt()  Sets the current record's "created_at" value
 * @method ProductSpec setUpdatedAt()  Sets the current record's "updated_at" value
 * @method ProductSpec setProduct()    Sets the current record's "Product" value
 * @method ProductSpec setSpec()       Sets the current record's "Spec" value
 * 
 * @package    vogue
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductSpec extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_spec');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('product_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('model_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('spec_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('sort', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('body', 'string', 2000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2000,
             ));
        $this->hasColumn('body_en', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id'));

        $this->hasOne('Spec', array(
             'local' => 'spec_id',
             'foreign' => 'id'));
    }
}